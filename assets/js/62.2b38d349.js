(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{353:function(t,e,l){t.exports=l.p+"assets/img/touchsky.38bc4a07.jpeg"},597:function(t,e,l){"use strict";l.r(e);var v=l(56),_=Object(v.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"从小工到专家读书笔记-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#从小工到专家读书笔记-2"}},[t._v("#")]),t._v(" 从小工到专家读书笔记 2")]),t._v(" "),v("img",{attrs:{src:l(353)}}),t._v(" "),v("p",[t._v("  这是痛苦的事：/看着你自己的烦忧，并且知道 /不是别人，而是你自己一人所致")]),t._v(" "),v("p",[t._v("  好篱笆促成好邻居——《补墙》")]),t._v(" "),v("hr"),t._v(" "),v("blockquote",[v("ul",[v("li",[t._v("发现了他人的 bug 之后，你可以花时间和精力去指责让人厌恶的肇事者。在有些工作环境中，这是文化的一部分，并且可能是疏通剂。但是，在技术竞技场上，你应该专注于修正问题，而不是发出指责。")]),t._v(" "),v("li",[t._v("找到问题的原因一种非常简单，却又特别有用的技术是向别人解释它。他应该越过你的肩膀看着屏幕，不断点头（像澡盆里上下晃动的橡皮鸭）。他们一个字也不需要说；你只是一步步解释代码要做什么，常常就能让问题从屏幕上跳出来，宣布自己的存在。")]),t._v(" "),v("li",[t._v("关于异常的问题之一是知道何时使用它们。我们相信，异常很少应作为程序的正常流程的一部分使用；异常应保留给意外事件。")]),t._v(" "),v("li",[t._v("间谍，反政府人员，革命者以及类似的人常常会组成小组，称为 cell。尽管每个最小组织单位内部的人员可能相互认识，但他们却不认识其他最小组织单位的人。如果某个最小组织单位被发现了，再多的麻醉药也无法使该最小组织单位外部的人姓名泄漏。切断最小组织单位之间的交往能保护每一个人。我们觉得这也适用于编码的好原则。把你的代码组织成最小组织单位，并限制它们之间的交互。如果随后出于折中必须替换某个模块，其他模块仍能够继续工作。")]),t._v(" "),v("li",[t._v("毛里求斯岛上的渡渡鸟不能适应人类和他们的家畜出现，很快就灭绝了。不要让你的项目或你的职业生涯走上渡渡鸟的道路。")]),t._v(" "),v("li",[t._v("假定副总裁来到你面前，想要你马上做一个应用，让她浏览存放在大型机的遗留数据库中的公司组织机构图。你只要编写一个读取大型机数据的包装程序，把它作为 TreeModel 给出，就成了：你有了一个完全可以浏览的树 widget。现在你可以变点花样，开始使用查看器类；你可以改变节点的绘制方式，使用特殊的图标，字体，或是颜色。当副总裁回来，说新的公司标准要求针对特定的雇员使用骷髅图标，你可以对TreeCellRenderer做出改动，而不用修改其他任何代码。")]),t._v(" "),v("li",[t._v("实现的偶然是那些只是因为代码现在的编写方式才得以发生的事情。你最后会依靠没有记入文档的错误或是边界条件。")]),t._v(" "),v("li",[t._v("时间压力常常被用作不进行重构的借口。但这个借口并不成立：现在没能进行重构，沿途修正问题将需要投入多得多的时间——那时将需要考虑更多的依赖关系。我们会有更多的时间可用嘛？根据我们的经验，没有。（说实话，看项目大小了）")])])])])}),[],!1,null,null,null);e.default=_.exports}}]);